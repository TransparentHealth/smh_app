from django.test import TestCase
from libs.qrcode import make_qr_code

fixtures = {
    'TEST_URL': 'http://sharemyhealthapp:8002/org/TestOrg/create-member/newmember-1/complete/NTA/56b-2936ae4d4ea599a9d3ac/',  # noqa
    'TEST_PNG_BASE64': 'iVBORw0KGgoAAAANSUhEUgAAAeoAAAHqAQAAAADjFjCXAAAEKUlEQVR4nO2dQY7jOAxFP8cCsrSBPkAdRb5BH6nQR5ob2EfJDaxlATb+LERLSmZWsRtdGX8uDAfWgxKAoER+WjHigM1/HaEB4cKFCxcuXLhw4efi5hZgNsAvIwCzYbM8ZExm+WJmZuN5swu/KB5JkguAuGwGJDN/sOwj5w8SQEeS5CN+cHbhF8WThy/+GgBEruCUAgB0NDMz8h7ACYCZhZNnF35t3D6zc3XEPGzGCZv5x48VNv7e2YVfAw9PnzkPfmeRWwDSDxqwGeOyBSKdOrvwa+M9ySnfrQBSyGutjf2anwLwDIPkevLswi+Jz2aWM9fP+402wu+AFIB4D7Ax3QhgyynsqbMLvxgOPlqOeuQKTuUuB7ee/7LprX+78D+FZ69DXJAT1Jw5ZCuLa1y6vP6SS0dO/eq1Fnmd8JfMg1ZPItI9zJ2wX8vFHTNbHiKvE/6qeQ4b72EF0oCcpc4fawDSjRbvJcvtPQYaAPCU2YVfEy+xrg1pvqVbfElFViSWrt3mKdYJf932xGBFdrOpd7+qrgegy4uwX3ZZTF4n/DXbVdVdX41LRy/QZf9rt3TucNrXCT9mdYUFSvoaF8CbAVjTjNZF5XXCj+I2pgBEflldSG1ER/6yAG9B6VcX/iO/VCUWfsByhkoAMKQBhn4LnEeA89B5vjp/EFmRjROAGhPf+7cL/1N4U69rCnSuUqxoLrVKl5NbrbDCj+H2eTcD0o2I9xsxD1Wl6PZsonfN32w4d3bhV8NbbaLEtb1K5ymFD8Eui6lyIvwYXmojXVMWzj1PsSy9vuC25TvlsMIPWLOvc+GBrA113sue3awUV6T+Cz9ku8qaDPS+YYDzzy0A/ZKfWVx+gPOwcJdgN+mwwo+YL6DLYwl42YObSxVr+7ZYlA4r/JDlWGdAt/ecIL88YZytjEohF+0sTlsg0nDS7MKviT8oYnW/9vC00WGfc423/u3CvwHOKd2I2QJsxN4ynG1PX23sv6zJNb7Plxf+tni/ojkAINeLdx3Wxn1UvftWX174++DtGhprB2fOMDo2L0/UwaqcCD+Go/Gw/+pqeux5cpV2kQ4r/JC5c9Vi8AKvDdfm9QlonkoRE35qrCs6bElkIx9bUNA1a628TvhrVisn/j5ObU/fG5/8fdia0gLa1wk/jhcJwkZsBmCzfNgEgN317jff9amrU/gxvOhgAKq0X9/4ry9PAHho7VSsE34Qj7sY6xEuBWD++DIb0eWi3cPmrhTtvsWXF/5u+HO9zo8z2WsoLAfrtN1Pi7IJ4WfiNla5K2/ubvSzirFZ3dfZ+DtmF34N/PmsTiAZvLUuDbD4N8DZOmL+2RHAFjgP0JuJwo9Yu5qWNvZyVlgeU895KnU9rbDCD9hzDltkMa/XoZx9svgQUl4n/JCZ/r1OuHDhwoULFy78f4H/A/VmHL7k5h5KAAAAAElFTkSuQmCC',  # noqa
    'TEST_PNG_RAW': b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x01\xea\x00\x00\x01\xea\x01\x00\x00\x00\x00\xe3\x160\x97\x00\x00\x04)IDATx\x9c\xed\x9dA\x8e\xe38\x0cE?\xc7\x02\xb2\xb4\x81>@\x1dE\xbeA\x1f\xa9\xd0G\x9a\x1b\xd8G\xc9\r\xace\x016\xfe,DKJfV\xb1\x1b]\x19\x7f.\x0c\x07\xd6\x83\x12\x80\xa0D~Z1\xe2\x80\xcd\x7f\x1d\xa1\x01\xe1\xc2\x85\x0b\x17.\\\xb8p\xe1\xe7\xe2\xe6\x16`6\xc0/#\x00\xb3a\xb3<dLf\xf9bff\xe3y\xb3\x0b\xbf(\x1eI\x92\x0b\x80\xb8l\x06$3\x7f\xb0\xec#\xe7\x0f\x12@G\x92\xe4#~pv\xe1\x17\xc5\x93\x87/\xfe\x1a\x00D\xae\xe0\x94\x02\x00t433\xf2\x1e\xc0\t\x80\x99\x85\x93g\x17~m\xdc>\xb3su\xc4<l\xc6\t\x9b\xf9\xc7\x8f\x156\xfe\xde\xd9\x85_\x03\x0fO\x9f9\x0f~g\x91[\x00\xd2\x0f\x1a\xb0\x19\xe3\xb2\x05"\x9d:\xbb\xf0k\xe3=\xc9)\xdf\xad\x00R\xc8k\xad\x8d\xfd\x9a\x9f\x02\xf0\x0c\x83\xe4z\xf2\xec\xc2/\x89\xcff\x963\xd7\xcf\xfb\x8d6\xc2\xef\x80\x14\x80x\x0f\xb01\xdd\x08`\xcb)\xec\xa9\xb3\x0b\xbf\x18\x0e>Z\x8ez\xe4\nN\xe5.\x07\xb7\x9e\xff\xb2\xe9\xad\x7f\xbb\xf0?\x85g\xafC\\\x90\x13\xd4\x9c9d+\x8bk\\\xba\xbc\xfe\x92KGN\xfd\xea\xb5\x16y\x9d\xf0\x97\xcc\x83VO"\xd2=\xcc\x9d\xb0_\xcb\xc5\x1d3[\x1e"\xaf\x13\xfe\xaay\x0e\x1b\xefa\x05\xd2\x80\x9c\xa5\xce\x1fk\x00\xd2\x8d\x16\xef%\xcb\xed=\x06\x1a\x00\xf0\x94\xd9\x85_\x13/\xb1\xae\ri\xbe\xa5[|IEV$\x96\xae\xdd\xe6)\xd6\t\x7f\xdd\xf6\xc4`Ev\xb3\xa9w\xbf\xaa\xae\x07\xa0\xcb\x8b\xb0_vYL^\'\xfc5\xdbU\xd5]_\x8dKG/\xd0e\xffk\xb7t\xeep\xda\xd7\t?fu\x85\x05J\xfa\x1a\x17\xc0\x9b\x01X\xd3\x8c\xd6E\xe5u\xc2\x8f\xe26\xa6\x00D~Y]HmDG\xfe\xb2\x00oA\xe9W\x17\xfe#\xbfT%\x16~\xc0r\x86J\x000\xa4\x01\x86~\x0b\x9cG\x80\xf3\xd0y\xbe:\x7f\x10Y\x91\x8d\x13\x80\x1a\x13\xdf\xfb\xb7\x0b\xffSxS\xafk\nt\xaeR\xach.\xb5J\x97\x93[\xad\xb0\xc2\x8f\xe1\xf6y7\x03\xd2\x8d\x88\xf7\x1b1\x0fU\xa5\xe8\xf6l\xa2w\xcd\xdfl8wv\xe1W\xc3[m\xa2\xc4\xb5\xbdJ\xe7)\x85\x0f\xc1.\x8b\xa9r"\xfc\x18^j#]S\x16\xce=O\xb1,\xbd\xbe\xe0\xb6\xe5;\xe5\xb0\xc2\x0fX\xb3\xafs\xe1\x81\xac\ru\xde\xcb\x9e\xdd\xac\x14W\xa4\xfe\x0b?d\xbb\xca\x9a\x0c\xf4\xbea\x80\xf3\xcf-\x00\xfd\x92\x9fY\\~\x80\xf3\xb0p\x97`7\xe9\xb0\xc2\x8f\x98/\xa0\xcbc\tx\xd9\x83\x9bK\x15k\xfb\xb6X\x94\x0e+\xfc\x90\xe5Xg@\xb7\xf7\x9c \xbf<a\x9c\xad\x8cJ!\x17\xed,N[ \xd2p\xd2\xec\xc2\xaf\x89?(bu\xbf\xf6\xf0\xb4\xd1a\x9fs\x8d\xb7\xfe\xed\xc2\xbf\x01\xce)\xdd\x88\xd9\x02l\xc4\xde2\x9cmO_m\xec\xbf\xac\xc95\xbe\xcf\x97\x17\xfe\xb6x\xbf\xa29\x00 \xd7\x8bw\x1d\xd6\xc6}T\xbd\xfbV_^\xf8\xfb\xe0\xed\x1a\x1ak\x07g\xce0:6/O\xd4\xc1\xaa\x9c\x08?\x86\xa3\xf1\xb0\xff\xeajz\xecyr\x95v\x91\x0e+\xfc\x90\xb9s\xd5b\xf0\x02\xaf\r\xd7\xe6\xf5\th\x9eJ\x11\x13~j\xac+:lId#\x1f[P\xd05k\xad\xbcN\xf8kV+\'\xfe>NmO\xdf\x1b\x9f\xfc}\xd8\x9a\xd2\x02\xda\xd7\t?\x8e\x17\t\xc2Fl\x06`\xb3|\xd8\x04\x80\xdd\xf5\xee7\xdf\xf5\xa9\xabS\xf81\xbc\xe8`\x00\xaa\xb4_\xdf\xf8\xaf/O\x00xh\xedT\xac\x13~\x10\x8f\xbb\x18\xeb\x11.\x05`\xfe\xf82\x1b\xd1\xe5\xa2\xdd\xc3\xe6\xae\x14\xed\xbe\xc5\x97\x17\xfen\xf8s\xbd\xce\x8f3\xd9k(,\x07\xeb\xb4\xddO\x8b\xb2\t\xe1g\xe26V\xb9+o\xeen\xf4\xb3\x8a\xb1Y\xdd\xd7\xd9\xf8;f\x17~\r\xfc\xf9\xacN \x19\xbc\xb5.\r\xb0\xf87\xc0\xd9:b\xfe\xd9\x11\xc0\x168\x0f\xd0\x9b\x89\xc2\x8fX\xbb\x9a\x966\xf6rVX\x1eS\xcfy*u=\xad\xb0\xc2\x0f\xd8s\x0e[d1\xaf\xd7\xa1\x9c}\xb2\xf8\x10R^\'\xfc\x90\x99\xfe\xbdN\xb8p\xe1\xc2\x85\x0b\x17.\xfc\x7f\x81\xff\x03\xf5f\x1c\xbe\xe4\xe6\x1eJ\x00\x00\x00\x00IEND\xaeB`\x82',  # noqa
}


class TestMakeQRCode(TestCase):
    def test_make_qr_code_defaults(self):
        """make_qr_code(url) with default parameters returns a base64-encoded PNG image string"""
        png_base64 = make_qr_code(fixtures['TEST_URL'])
        self.assertEqual(png_base64, fixtures['TEST_PNG_BASE64'])

    def test_make_qr_code_png_raw(self):
        """make_qr_code(url, encode_base64=False) returns the raw PNG image data"""
        png_raw = make_qr_code(fixtures['TEST_URL'], encode_base64=False)
        self.assertEqual(png_raw, fixtures['TEST_PNG_RAW'])
